name: communication-link

on:
  push:
    branches: [ main ]
    paths:
      - communicationlink/**
      - .github/workflows/communication-link.yaml
  pull_request:
    branches: [ main ]
    paths:
      - communicationlink/**
      - .github/workflows/communication-link.yaml
  workflow_dispatch:

jobs:
  tii-communication-link-deb:
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest
    container: ros:foxy-ros-base
    steps:

      - name: Checkout communication-link
        uses: actions/checkout@v2

      - name: Setup Go environment
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Install additional tools and libraries
        run: |
          echo "deb [trusted=yes] https://artifactory.ssrc.fi/artifactory/debian-public-local focal fog-sw" >> /etc/apt/sources.list
          apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
          apt-get update
          apt-get install -y --no-install-recommends \
            build-essential \
            cmake \
            curl \
            debhelper \
            dh-make \
            fakeroot \
            gcc \
            git-core \
            make \
            python3-bloom \
            ros-foxy-px4-msgs \
            ros-foxy-fog-msgs

      - name: Build debian package
        run: |
          . /opt/ros/foxy/setup.sh

          mkdir -p communicationlink/packaging/common
          cp -fR scripts/* communicationlink/packaging/common/

          cd communicationlink
          params="-m $(realpath .) -v 2.0.0 -c $(git rev-parse HEAD) -g $(git log --date=format:%Y%m%d --pretty=~git%cd.%h -n 1) -b ${GITHUB_RUN_NUMBER}"
          ./packaging/common/package.sh $params

      - name: Install jfrog CLI tool
        env:
          JFROG_CLI_URL: https://artifactory.ssrc.fi/artifactory/gen-public-local/tools/jfrog/jfrog-1.45.2.tar.gz
        if: github.event_name == 'push'
        run: |
          set -exu
          mkdir -p "$GITHUB_WORKSPACE/.jfrog/bin"
          curl -L "$JFROG_CLI_URL" -o "$GITHUB_WORKSPACE/.jfrog/jfrog.tar.gz"
          tar -C "$GITHUB_WORKSPACE/.jfrog/bin" -zxf "$GITHUB_WORKSPACE/.jfrog/jfrog.tar.gz"
          echo "$GITHUB_WORKSPACE/.jfrog/bin" >> "$GITHUB_PATH"
          echo "JFROG_CLI_HOME_DIR=$GITHUB_WORKSPACE/.jfrog" >> "$GITHUB_ENV"

      - name: Upload to Artifactory
        env:
          ARTIFACTORY_TOKEN: ${{ secrets.ARTIFACTORY_TOKEN }}
          ARTIFACTORY_REPO: debian-public-local
          DISTRIBUTION: focal
          COMPONENT: fog-sw
          ARCHITECTURE: amd64
          BUILD_NAME: communication-link
          CI: true
        if: github.event_name == 'push'
        run: |
          set -exu
          jfrog rt c import "$ARTIFACTORY_TOKEN"
          jfrog rt ping
          pkg=$(find "$GITHUB_WORKSPACE" -name 'communication-link*.deb')
          jfrog rt u --deb "$DISTRIBUTION/$COMPONENT/$ARCHITECTURE" \
                     --target-props COMMIT="$GITHUB_SHA" \
                     --build-name "$BUILD_NAME" \
                     --build-number "$GITHUB_SHA" \
                     "$pkg" \
                     "$ARTIFACTORY_REPO"
          jfrog rt build-publish "$BUILD_NAME" "$GITHUB_SHA"
          jfrog rt bpr "$BUILD_NAME" "$GITHUB_SHA" "$ARTIFACTORY_REPO" \
                       --status dev \
                       --comment "development build"
